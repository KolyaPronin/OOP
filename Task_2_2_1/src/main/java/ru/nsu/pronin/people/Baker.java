package ru.nsu.pronin.people;

import ru.nsu.pronin.data.Order;
import ru.nsu.pronin.process.GeneralQueueOfOrders;
import ru.nsu.pronin.process.Warehouse;

/**
 * –ö–ª–∞—Å—Å Baker —Ä–µ–∞–ª–∏–∑—É–µ—Ç –æ—Ç–¥–µ–ª—å–Ω–æ –≤–∑—è—Ç–æ–≥–æ –ø–µ–∫–∞—Ä—è,
 * –∫–æ—Ç–æ—Ä—ã–π –≤ –±—É–¥—É—â–µ–º –±—É–¥–µ—Ç –∏—Å–ø–æ–ª—å–∑–æ–≤–∞—Ç—å—Å—è –≤ –ø–æ—Ç–æ–∫–µ.
 * */
public class Baker {
    private final GeneralQueueOfOrders orders;
    private final int id;
    private final int time;

    /**
    * –ö–æ–Ω—Å—Ç—Ä—É–∫—Ç–æ—Ä –¥–ª—è –∏–Ω–∏—Ü–∏–∞–ª–∏–∑–∞—Ü–∏–∏ –ø–æ–ª–µ–π –ø–µ–∫–∞—Ä—è.
     *
     * @param id - –ª–∏—á–Ω—ã–π –∏–¥–µ–Ω—Ç–∏—Ñ–∏–∫–∞—Ç–æ—Ä –ø–µ–∫–∞—Ä—è.
     * @param time - –≤—Ä–µ–º—è –∑–∞—Ç—Ä–∞—á–µ–Ω–Ω–æ–µ –ø–µ–∫–∞—Ä–µ–º –Ω–∞ –≤—ã–ø–æ–ª–Ω–µ–Ω–∏–µ –∑–∞–∫–∞–∑–∞, ms.
     * @param orders - –æ—á–µ—Ä–µ–¥—å –∑–∞–∫–∞–∑–æ–≤.
     * */
    public Baker(int id, int time, GeneralQueueOfOrders orders) {
        this.id = id;
        this.orders = orders;
        this.time = time;
    }

    /**
     * –ú–µ—Ç–æ–¥ baker —Ä–µ–∞–ª–∏–∑—É–µ—Ç –≤—ã–ø–æ–ª–Ω–µ–Ω–∏–µ –∑–∞–∫–∞–∑–æ–≤ –ø–æ–≤–∞—Ä–æ–º.
     *
     * @throws InterruptedException –µ—Å–ª–∏ –≤—ã–ø–æ–ª–Ω–µ–Ω–∏–µ –ø–æ—Ç–æ–∫–æ–≤ –ø—Ä–µ—Ä—ã–≤–∞–µ—Ç—Å—è.
     */
    public void bake(Order order) throws InterruptedException {
        order.setState("–ì–æ—Ç–æ–≤–∏—Ç—Å—è  –ø–µ–∫–∞—Ä–µ–º üë®üèø‚Äçüç≥ ");
        System.out.println("–ó–∞–∫–∞–∑ üçï " + order.getId() + " " + order.getState() + " –Ω–æ–º–µ—Ä " + id);
        System.out.println("–≥–æ—Ç–æ–≤–ª—é –∑–∞–∫–∞–∑ üçï " + order.getId());
        Thread.sleep(time);
        System.out.println("–ó–∞–∫–∞–∑ üçï " + order.getId() + " –≥–æ—Ç–æ–≤");
        Warehouse.placeOrder(order);
    }

    public GeneralQueueOfOrders getOrderQueue() {
        return orders;
    }
}
